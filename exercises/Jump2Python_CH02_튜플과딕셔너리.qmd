---
title: "Jump to Python CH02 - 튜플과 딕셔너리"
format: html
---

```{python}
# 모든 코드 줄의 결과를 자동 출력
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
```

# 튜플 

튜플은 여러 값을 하나의 변수에 저장할 수 있는 자료이다. 
튜플은 리스트와 비슷하지만, 한 번 생성된 후에는 변경할 수 없다(immutable). 
튜플은 소괄호 `()`로 정의한다.

```{python}
t1 = ()
t2 = (1,)
t3 = (1, 2, 3)
t4 = 1, 2, 3
t5 = ('a', 'b', ('ab', 'cd'))
```

## 튜플과 리스트의 차이

튜플(tuple)과 리스트(list)는 여러 값을 하나의 변수에 저장할 수 있는 파이썬의 대표적인 자료형입니다. 하지만 두 자료형에는 중요한 차이점이 있습니다.

- **리스트(list)**
  - 대괄호 `[]`로 생성합니다.
  - 생성 후, 요소의 추가/삭제/변경이 가능합니다(가변, mutable).
  - 예시: `a = [1, 2, 3]`

- **튜플(tuple)**
  - 소괄호 `()`로 생성합니다.
  - 한 번 생성하면 요소를 변경할 수 없습니다(불변, immutable).
  - 예시: `b = (1, 2, 3)`

## 주요 차이점
- **변경 가능성**: 리스트는 내용을 바꿀 수 있지만, 튜플은 한 번 정해지면 바꿀 수 없습니다.
- **용도**: 변경이 필요한 데이터는 리스트, 변경이 필요 없는 데이터(예: 좌표, 설정값 등)는 튜플을 사용합니다.
- **속도**: 튜플이 리스트보다 약간 더 빠릅니다.

> **정리:**
> - 리스트: 가변, 대괄호, 요소 변경 가능
> - 튜플: 불변, 소괄호, 요소 변경 불가

## 인덱싱

```{python}
t = (1, 2, 3, 4, 5)
print(t[0])  # 첫 번째 요소
print(t[-1])  # 마지막 요소
```


## 슬라이싱

```{python}
t[1:] # 두 번째 요소부터 끝까지
```

## 튜플 연산 

### 더하기 

```{python}
t1 = (1, 2, 'a', 'b')
t2 = (3, 4)
t3 = t1 + t2

t3
```

### 곱하기 

```{python}
t2 = (3, 4)
t3 = t2 * 3
t3 #t2를 3번 반복한 튜플
```

### 길이 구하기 

```{python}
len(t1)
```

# 딕셔너리 


